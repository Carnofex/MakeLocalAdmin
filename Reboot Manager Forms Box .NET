# Made by Timothy Dalton Circa 23-24. 

#Theres more registry flags that can be checked, but they will almost always pop a reboot flag. One major one is in SessionsManager, called PendindFileRenameOperations
#This will house .dll rename operations for printers and such - useless. 

#The WindowsUpdate\Services\Pending will also always pop due to the (Default) DWORD being undefined. GUIDs will populate there is a reboot is needed. (OR should)

#IF this isnt doing its job, comment out lines 72-87. Or Comment out the entire first function from 54-90. 
#
#⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡠⠔⠒⠚⠉⠓⠒⠒⠤⠄⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
#⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡠⠔⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠒⠢⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀
#⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢣⡀⠀⠀⠀⠀⠀⠀⠀
#⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⢀⣀⡠⠤⠤⣖⢒⣉⣉⣉⡠⠤⠄⠀⠀⠀⢣⠀⠀⠀⠀⠀⠀⠀
#⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠃⠀⠀⣀⡠⠔⣂⡩⠥⠤⠔⠊⣉⣀⠤⠔⠒⠉⠙⠒⠀⠀⠀⠀⢸⡆⠀⠀⠀⠀⠀⠀
#⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡿⠀⠒⠙⣿⠽⠟⠐⠒⠂⠈⠉⠁⠀⠀⢀⣀⣀⣀⣀⣀⣀⠀⠀⠀⠘⡃⠀⠀⠀⠀⠀⠀
#⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠀⠀⠀⠀⠀⠈⠁⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀
#⠀⠀⠀⠀⠀⠀⢀⡠⠒⠈⠉⠀⠀⠀⠀⠀⠉⠁⠒⠤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢀⡤⠔⠒⠐⠒⠦⠀⠀⠀⠀⢀⣴⢂⣀⣤⡄⠀⠀⠀⠀⠀⠀⣗⠀⠀⠀⠀⠀⠀
#⠀⠀⠀⢀⡤⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠑⠢⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⡆⠀⠁⠀⣀⣤⣴⡗⣒⣧⠀⠀⡇⠘⢏⠽⠿⠗⠃⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀
#⠀⠀⣰⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⢦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢣⠀⠀⠀⠱⠾⠿⠧⠜⢹⠀⠀⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠆⠀⠀⠀⠀⠀
#⣠⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣄⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⡄⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠈⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠆⠀⠀⠀⠀⠀
#⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠳⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢳⣌⠑⠒⠒⠶⣄⡀⠀⠀⠀⠀⠀⠀⢧⠀⠀⠀⠀⠀⠀⠀⡴⠁⠀⠀⠈⢦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⠁⠀⠀⠀⠀⠀
#⠀⠈⠉⠉⠉⣉⡉⠍⣉⢉⣉⠉⠒⠒⠒⠒⠢⠄⠤⠄⠤⠠⠄⠤⠀⣀⡀⠀⠀⠘⢆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡿⠀⠀⠀⠀⠉⠉⠒⠢⠤⠤⢤⣼⡇⠀⠀⠀⠀⠀⠀⠣⣀⠤⠤⠤⠏⠀⠀⠀⠀⠀⠀⠀⠀⢀⣰⠛⣆⠀⠀⠀⠀⠀
#⠀⢀⢤⣚⠽⠛⠒⠒⠠⠤⠄⢈⡑⠢⠤⠄⠤⠤⠤⠐⠒⢒⡐⠒⠒⠤⢈⠑⠄⠀⠈⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠱⣶⡀⠀⠀⠀⠀⡠⢀⣤⣄⠀⡄⢀⠀⠀⠀⠀⠀⣠⣞⣿⣾⡧⠘⠦⠄⣀⠀⠀
#⠀⠴⠉⢀⡠⠄⠄⣀⠀⠀⠀⠀⠈⠁⠀⠀⠀⠒⠂⠉⠁⠀⠀⠉⠉⠒⠢⡙⠀⠀⠀⠸⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⠗⠒⠒⠒⢤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢏⠀⠀⢀⡾⠁⣼⣧⣤⣷⣅⠈⢷⡀⣦⡀⣸⣿⣿⣿⠹⣇⠀⠀⠀⠀⠉⠓
#⠀⠀⠀⠁⠀⠀⠀⠀⠙⢆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡠⠔⠒⠒⠦⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠳⣀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢻⡂⣾⣇⢸⣿⣿⣿⣿⣿⣿⡆⠑⠻⣏⣷⡉⣿⡻⠛⠛⠀⠀⠀⠀⠀⠀
#⣀⡤⡴⠶⢦⣤⣄⣄⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣀⣀⠀⠉⠀⠀⠀⠀⢻⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠦⡀⠀⠀⠀⠀⠀⠀⠉⢳⣿⣿⠀⢿⣿⣿⣿⠟⡽⠁⠀⠀⠉⢠⢿⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀
#⠉⠀⢠⣔⣉⣁⣀⠈⠑⠢⡈⠉⠛⢄⠁⠈⠀⢉⠝⠋⠉⣉⠭⠝⠻⠯⡉⠛⠳⠶⡒⠤⣼⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⢄⠀⠀⠀⠀⠀⠀⠉⠙⢾⣄⠈⠓⠒⠒⠈⠀⠀⠀⢀⣿⡿⠚⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀
#⠀⠀⠀⠹⣤⣿⣿⣿⠐⠢⣜⠆⠀⡜⣠⡖⠲⣼⡄⠀⣈⣼⣿⣿⡀⢢⡌⠀⠀⠀⠘⡄⣼⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⣄⠀⠀⠀⠀⠀⠀⠘⢿⢴⣆⣀⠀⢀⡤⡄⣠⣟⣹⠛⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
#⠀⠀⠀⠠⣄⠁⠉⠉⣈⠝⠁⢀⠜⣡⠋⠀⠀⠹⡷⡌⢑⠚⠟⠛⠋⠉⣀⡀⠀⠀⢠⠗⡿⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠰⢄⠀⠀⠀⠀⠀⠈⠀⠈⢛⣾⠻⡗⠟⠻⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
#⠑⠤⣀⣀⣀⡉⡉⢉⣀⣀⣤⡮⠐⡻⠀⠀⠀⠀⢡⣈⠢⣉⡀⠂⠉⠉⢀⣀⣤⢴⡎⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠳⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
#⠉⠉⠉⠉⠉⠁⠉⠉⠀⠀⠀⠀⢀⠇⠀⠀⠀⠀⠸⡆⠈⠉⠉⠉⠉⠉⠉⠀⠀⠉⠀⢠⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
#⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡼⠀⠀⠀⠀⠀⠀⢧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
#⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⢇⠀⠀⠀⠀⠀⣀⠜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢣⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
#⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣉⠉⠒⠒⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
#⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡴⠁⡀⣄⠀⢠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
#⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠜⠋⠀⢘⣙⣃⣀⡼⢇⠀⡄⠀⠀⠀⠀⠀⠀⠀⠀⣤⣿⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢳⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
#⠀⠀⠀⠀⠀⠀⠀⠀⢠⡿⠀⢀⣞⣯⣤⣤⣀⡉⠲⡝⣿⡄⠀⠀⠀⠀⠀⠀⢚⣹⣿⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
#⠀⠀⠀⠀⠀⠀⠀⢀⣾⠃⣠⣾⣿⣿⣿⣿⣿⣿⡀⢸⡇⣿⠀⠀⡀⢠⢰⡇⢸⣿⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
#⢠⠶⣄⠀⠀⠀⠀⢸⡉⠐⡏⠻⣿⣿⣿⣿⣿⣿⡧⡏⠉⠉⡇⠀⢳⠾⣆⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
#⡟⠀⠼⠀⢠⠀⠀⣸⡇⠄⠱⡀⠙⣿⣿⣿⣿⡿⢘⠇⠀⢰⠛⣶⢛⢲⣿⣿⣿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
#⡄⡀⡄⣇⢨⠇⢤⠟⠁⢸⡀⢱⠀⠈⠛⠋⠁⠀⢨⠇⠀⣸⡌⠁⢹⠾⣥⡟⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
#⢤⣇⣧⠘⡎⠰⡘⠄⢆⠛⡇⠀⠣⣀⣀⣀⣠⠤⠊⢸⣼⢄⣧⣠⣿⡄⢩⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
#⡄⢉⡷⣄⠹⣄⢳⠀⢸⠀⣩⠱⡀⢠⠀⠀⡃⡆⢀⣸⣯⡈⣿⣿⠁⠱⢸⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
#⡇⠈⠙⠀⠓⢤⠾⣇⢸⠀⡇⢸⢱⡸⠄⣴⣷⣇⠀⣏⣹⣿⡟⠉⠂⢀⣸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
#⡇⠀⠀⠀⠀⠀⢹⡿⣼⡘⣿⠀⣿⡀⠜⡇⣸⣿⡆⣸⡟⠛⠃⠀⠀⡼⠘⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
#⠇⠀⠀⠀⠀⠀⡸⠉⠋⠙⠻⣄⢘⣿⡌⣰⢿⣿⠏⠛⢹⡀⠀⠀⠀⡇⠀⢳⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
#






function Test-RebootPending {
    $rebootRequired = $false

    # Define the paths to check for pending reboot, excluding specific keys
    $paths = @(
        "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Component Based Servicing\RebootPending"
    )

    # Check for the presence of specific keys
    foreach ($path in $paths) {
        if (Test-Path $path) {
            Write-Host "Reboot is pending due to path: $path"
            $rebootRequired = $true
            break # Exit the loop if any path indicates a reboot is needed
        }
    }

    # Additional check for GUID subkeys under the WindowsUpdate\Services\Pending path
    if (-not $rebootRequired) {
        $guidPath = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\WindowsUpdate\Services\Pending"
        try {
            $subKeys = Get-Item -Path $guidPath | Get-ChildItem -ErrorAction Stop

            foreach ($subKey in $subKeys) {
                if ($subKey.Name -match '(\{[0-9A-Fa-f]{8}\-[0-9A-Fa-f]{4}\-[0-9A-Fa-f]{4}\-[0-9A-Fa-f]{4}\-[0-9A-Fa-f]{12}\})') {
                    Write-Host "Reboot is pending due to GUID subkey: $($subKey.Name)"
                    $rebootRequired = $true
                    break # Exit the loop if a GUID subkey is found
                }
            }
        } catch {
            Write-Host "No GUID subkeys found under $guidPath or error encountered."
        }
    }

    return $rebootRequired
}


# Use the function to check if a reboot is pending
if (Test-RebootPending) {
    # Only show the reboot prompt if a reboot is pending
Add-Type -AssemblyName System.Windows.Forms

# Window and Header
$form = New-Object System.Windows.Forms.Form
$form.Text = "E-N Computers System Message"
$form.Size = New-Object System.Drawing.Size(450, 200)
$form.TopMost = $false  # Set TopMost property to false

# Reboot Dude
$label = New-Object System.Windows.Forms.Label
$label.Location = New-Object System.Drawing.Point(10, 10)
$label.Size = New-Object System.Drawing.Size(410, 80)
$label.Text = "Your workstation has had system or security updates installed and must be rebooted. Please save your work and restart your computer."

# buttons
$buttonCancel = New-Object System.Windows.Forms.Button
$buttonCancel.Location = New-Object System.Drawing.Point(110, 100)
$buttonCancel.Size = New-Object System.Drawing.Size(80, 30)
$buttonCancel.Text = "Cancel"
$buttonCancel.Add_Click({
    Write-Host "User clicked Cancel. Update canceled. No action taken."
    # kill the window 
    $form.Close()
})

$buttonReboot = New-Object System.Windows.Forms.Button
$buttonReboot.Location = New-Object System.Drawing.Point(240, 100)
$buttonReboot.Size = New-Object System.Drawing.Size(80, 30)
$buttonReboot.Text = "Reboot"
$buttonReboot.BackColor = [System.Drawing.Color]::IndianRed  # Set reboot button color to red
$buttonReboot.ForeColor = [System.Drawing.Color]::White  # Set text color to white
$buttonReboot.Add_Click({
    Write-Host "User clicked Reboot. Prompting Confirmation..."

    # Create a new confirmation form
    $confirmForm = New-Object System.Windows.Forms.Form
    $confirmForm.Text = "Confirm Reboot"
    $confirmForm.Size = New-Object System.Drawing.Size(300, 150)

    # Confirmation message
    $confirmLabel = New-Object System.Windows.Forms.Label
    $confirmLabel.Location = New-Object System.Drawing.Point(10, 10)
    $confirmLabel.Size = New-Object System.Drawing.Size(280, 40)
    $confirmLabel.Text = "Are you sure you are ready to Restart? Click Yes to proceed, click No to cancel."
    $confirmForm.Controls.Add($confirmLabel)

    # Yes button
    $yesButton = New-Object System.Windows.Forms.Button
    $yesButton.Location = New-Object System.Drawing.Point(50, 60)
    $yesButton.Size = New-Object System.Drawing.Size(75, 30)
    $yesButton.Text = "Yes"
    $yesButton.Add_Click({
        Restart-Computer -Force
        $confirmForm.Close()
    })
    $confirmForm.Controls.Add($yesButton)

    # No button
     $noButton = New-Object System.Windows.Forms.Button
    $noButton.Location = New-Object System.Drawing.Point(150, 60)
    $noButton.Size = New-Object System.Drawing.Size(75, 30)
    $noButton.Text = "No"
    $noButton.Add_Click({
        $confirmForm.Close()
        $form.Close() # This line will close the main form
    })
    $confirmForm.Controls.Add($noButton)

    # Show the confirmation form
    $confirmForm.ShowDialog()
})

# Add controls to the form
$form.Controls.Add($label)
$form.Controls.Add($buttonCancel)
$form.Controls.Add($buttonReboot)

# Show the form
$result = $form.ShowDialog()

# Dispose of the form when done
$form.Dispose()
    Write-Host "Prompting user for reboot."
} else {
    Write-Host "No reboot is necessary."
}
